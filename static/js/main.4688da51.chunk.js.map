{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","fetch","then","response","ok","Error","status","statusText","json","FindMovie","addMovie","useState","setTitle","setMovie","movieError","setMovieError","loadMovie","a","APIMovie","Response","newMovie","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","name","value","onChange","target","disabled","onClick","App","state","data","find","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4688da51.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","const API_URL = 'https://www.omdbapi.com/?apikey=d4cd05b';\n\nexport const getMovie = (title: string) :Promise<APIMovie> => {\n  return fetch(`${API_URL}&t=[${title}]`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n// import classNames from 'classnames'\nimport { getMovie } from '../../api/api';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie } = props;\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [movieError, setMovieError] = useState(false);\n\n  const loadMovie = async () => {\n    const APIMovie: APIMovie = await getMovie(title);\n\n    if (APIMovie.Response === 'False') {\n      setMovieError(true);\n      setMovie(null);\n\n      return;\n    }\n\n    setMovieError(false);\n\n    const newMovie: Movie = {\n      title: APIMovie.Title,\n      description: APIMovie.Plot,\n      imgUrl: APIMovie.Poster,\n      imdbId: APIMovie.imdbID,\n      imdbUrl: `https://www.imdb.com/title/${APIMovie.imdbID}`,\n    };\n\n    setMovie(newMovie);\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setMovieError(false);\n    setTitle(value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    loadMovie();\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={handleSubmit}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              name=\"title\"\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n\n          {movieError && (\n            <p className=\"help is-danger\">\n              Cannot find the film with such title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={() => {\n                addMovie(movie as Movie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (<MovieCard movie={movie} />)}\n      </div>\n    </>\n  );\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport data from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: data,\n  };\n\n  addMovie = (newMovie: Movie) => {\n    const { movies } = this.state;\n\n    const isMovieFound = movies.find(movie => movie.imdbId === newMovie.imdbId);\n\n    if (!isMovieFound) {\n      this.setState(state => ({\n        movies: [...state.movies, newMovie],\n      }));\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}